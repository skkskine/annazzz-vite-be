version: '3.9'
services:
  payload:
    image: node:20-alpine
    container_name: payload
    working_dir: /app
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/.next
    command: sh -c "npm install && npm run build && npm run start"
    environment:
      NODE_ENV: production
      PAYLOAD_SECRET: ${PAYLOAD_SECRET}
      BLOB_READ_WRITE_TOKEN: ${BLOB_READ_WRITE_TOKEN}
      APP_URL: ${APP_URL}
      DATABASE_URI: ${DATABASE_URI}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      PGPASSWORD: ${PGPASSWORD}
      PGDATABASE: ${PGDATABASE}
      PGHOST_UNPOOLED: ${PGHOST_UNPOOLED}
      NEXT_PUBLIC_STACK_PROJECT_ID: ${NEXT_PUBLIC_STACK_PROJECT_ID}
      PGUSER: ${PGUSER}
      POSTGRES_URL_NO_SSL: ${POSTGRES_URL_NO_SSL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY: ${NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY}
      NEON_PROJECT_ID: ${NEON_PROJECT_ID}
      POSTGRES_URL: ${POSTGRES_URL}
      POSTGRES_PRISMA_URL: ${POSTGRES_PRISMA_URL}
      DATABASE_URL_UNPOOLED: ${DATABASE_URL_UNPOOLED}
      POSTGRES_URL_NON_POOLING: ${POSTGRES_URL_NON_POOLING}
      PGHOST: ${PGHOST}
      POSTGRES_USER: ${POSTGRES_USER}
      STACK_SECRET_SERVER_KEY: ${STACK_SECRET_SERVER_KEY}
      DATABASE_URL: ${DATABASE_URL}
      PORT: 3000
    ports:
      - '3000:3000'
    networks:
      - traefik
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.payload.rule=Host(`be.annazampatti.com`)'
      - 'traefik.http.routers.payload.entrypoints=websecure'
      - 'traefik.http.routers.payload.tls.certresolver=myresolver'
      - 'traefik.http.services.payload.loadbalancer.server.port=3000'
    restart: unless-stopped

networks:
  traefik:
    external: true
